# 739 Daily temperatures

# Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

 

# Example 1:

# Input: temperatures = [73,74,75,71,69,72,76,73]
# Output: [1,1,4,2,1,1,0,0]
# Example 2:

# Input: temperatures = [30,40,50,60]
# Output: [1,1,1,0]
# Example 3:

# Input: temperatures = [30,60,90]
# Output: [1,1,0]

# Solution using stack
# At each iteration, check if the curr temperature is higher than the previous temperature. 
# If it is, then we can pop the previous temperature from the stack and calculate the difference 
# between the current index and the previous index. This process will continue until the current 
# temperature is no longer lower then the last temperature in the stack.
def dailyTemperatures(temperatures: list[int]) -> list[int]:
    stack = []
    ans = [0] * len(temperatures)

    for i in range(len(temperatures)):
        if not temperatures:
            stack.append(i)
            continue 
        
        while stack and temperatures[stack[-1]] < temperatures[i]:
            ans[stack[-1]] = i - stack[-1]
            stack.pop()

        stack.append(i)
    return ans  